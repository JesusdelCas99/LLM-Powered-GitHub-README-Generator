-- NEW FILE: .github/workflows/deployment.yml

name: Docker Compose Up

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Docker Compose
      run: docker-compose up -d
      
    - name: Verify Containers
      run: |
        docker ps --format '{{.Names}}'
        container_count=$(docker ps --format '{{.Names}}' | wc -l)
        if [ $container_count -ne 8 ]; then
          echo "Error: Expected 8 containers, but found $container_count containers."
          exit 1
        fi



-- NEW FILE: data/ldif/organization.ldif

# LDIF Export for dc=miejemploowncloudldap,dc=com
# Server: openldap (openldap)
# Search Scope: base
# Search Filter: (objectClass=*)
# Total Entries: 1
#
# Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on February 8, 2024 12:45 am
# Version: 1.2.5

version: 1

# Organization
dn: dc=miejemploowncloudldap,dc=com
objectClass: dcObject
objectClass: organization
dc: miejemploowncloudldap
o: miorganizacion

# Organizational Unit for users
dn: ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: organizationalUnit
ou: miorganizacion

# Group for users
dn: cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: posixGroup
cn: migrupo
gidNumber: 1001




-- NEW FILE: data/ldif/users.ldif

dn: cn=Jose Manuel Soto Hidalgo,cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
cn: Jose Manuel Soto Hidalgo
sn: Soto Hidalgo
givenName: Jose Manuel
uid: jose
userPassword: password1
uidNumber: 1001
gidNumber: 1001
homeDirectory: /home/jose
loginShell: /bin/bash
displayName: Jose Manuel Soto Hidalgo

dn: cn=Juan Perez,cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
cn: Juan Perez
sn: Perez
givenName: Juan
uid: juan
userPassword: password2
uidNumber: 1002
gidNumber: 1001
homeDirectory: /home/juan
loginShell: /bin/bash
displayName: Juan Perez

dn: cn=Maria Garcia,cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
cn: Maria Garcia
sn: Garcia
givenName: Maria
uid: maria
userPassword: password3
uidNumber: 1003
gidNumber: 1001
homeDirectory: /home/maria
loginShell: /bin/bash
displayName: Maria Garcia

dn: cn=Carlos Lopez,cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
cn: Carlos Lopez
sn: Lopez
givenName: Carlos
uid: carlos
userPassword: password4
uidNumber: 1004
gidNumber: 1001
homeDirectory: /home/carlos
loginShell: /bin/bash
displayName: Carlos Lopez

dn: cn=Ana Martinez,cn=migrupo,ou=miorganizacion,dc=miejemploowncloudldap,dc=com
objectClass: inetOrgPerson
objectClass: posixAccount
cn: Ana Martinez
sn: Martinez
givenName: Ana
uid: ana
userPassword: password5
uidNumber: 1005
gidNumber: 1001
homeDirectory: /home/ana
loginShell: /bin/bash
displayName: Ana Martinez




-- NEW FILE: docker-compose.yml

version: '3'

services:

  owncloud:
    image: owncloud/server:latest
    networks:
      - red_web
      - red_servicios
    deploy:
      replicas: 3
    volumes:
      - data_owncloud:/mnt/data
    depends_on:
      - redis
      - mariadb
    env_file:
      - ./env/owncloud/owncloud.env

  phpldapadmin:
    container_name: phpldapadmin
    image: osixia/phpldapadmin:latest
    ports:
      - "8081:80"
    networks:
      red_web:
        ipv4_address: 192.168.10.6
      red_servicios:
        ipv4_address: 192.168.20.41
    depends_on:
      - openldap
    env_file:
      - ./env/phpldapadmin/phpldapadmin.env

  openldap:
    container_name: openldap
    image: osixia/openldap:1.5.0
    command: --loglevel debug
    networks:
      red_servicios:
        ipv4_address: 192.168.20.40
    volumes:
      - data_openldap:/var/lib/ldap
      - conf_openldap:/etc/ldap/slapd.d
    env_file:
      - ./env/openldap/openldap.env

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      red_servicios:
        ipv4_address: 192.168.20.30
    volumes:
      - data_redis:/data

  mariadb:
    container_name: mariadb
    image: mariadb
    ports:
      - "3306:3306"
    networks:
      red_servicios:
        ipv4_address: 192.168.20.20
    volumes:
      - data_mariadb:/var/lib/mysql
    env_file:
      - ./env/mariadb/mariadb.env

  haproxy:
    container_name: haproxy
    image: haproxy:2.3
    volumes:
      - ./volumes/haproxy:/usr/local/etc/haproxy
    depends_on:
      - owncloud
    ports:
      - "8080:8080"  
      - "8082:8082" 
    networks:
      red_web:
        ipv4_address: 192.168.10.20

networks:
  red_web:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24

  red_servicios:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24

volumes:
  data_owncloud:
    driver: local
  data_openldap:
    driver: local
  conf_openldap:
    driver: local
  data_redis:
    driver: local
  data_mariadb:
    driver: local

  



-- NEW FILE: env/mariadb/mariadb.env

MYSQL_ROOT_PASSWORD=owncloud
MYSQL_DATABASE=owncloud
MYSQL_USER=owncloud
MYSQL_PASSWORD=owncloud



-- NEW FILE: env/openldap/openldap.env

LDAP_ADMIN_USERNAME=admin
LDAP_ADMIN_PASSWORD=admin
LDAP_DOMAIN=miejemploowncloudldap.com
LDAP_TLS=false
LDAP_BASE_DN=dc=miejemploowncloudldap,dc=com


-- NEW FILE: env/owncloud/owncloud.env

OWNCLOUD_REDIS_ENABLED=true
OWNCLOUD_REDIS_HOST=redis
OWNCLOUD_DOMAIN=localhost
OWNCLOUD_DB_TYPE=mysql
OWNCLOUD_DB_NAME=owncloud
OWNCLOUD_DB_USERNAME=owncloud
OWNCLOUD_DB_PASSWORD=owncloud
OWNCLOUD_DB_HOST=mariadb
ADMIN_PASSWORD=admin
ADMIN_USERNAME=admin



-- NEW FILE: env/phpldapadmin/phpldapadmin.env

PHPLDAPADMIN_LDAP_HOSTS=openldap
PHPLDAPADMIN_HTTPS=false


-- NEW FILE: init.sh

#!/bin/bash

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "Docker Compose is not installed. Please install Docker Compose before running this script."
    exit 1
fi

# Start Docker Compose services in detached mode
sudo docker-compose up -d

# Wait until all services are up and running
while [[ $(sudo docker-compose ps --services | wc -l) -ne $(sudo docker-compose ps --services --filter "status=running" | wc -l) ]]; do
    sleep 1
done

# Directory containing LDIF files
HOST_LDIF_DIR="./data/ldif"

# Directory in the container where LDIF files will be copied
CONTAINER_LDIF_DIR="/tmp"

# Copy LDIF files from host to container
sudo docker cp "$HOST_LDIF_DIR" openldap:"$CONTAINER_LDIF_DIR"

# LDAP administrator credentials
LDAP_ADMIN_DN="cn=admin,dc=miejemploowncloudldap,dc=com"
LDAP_ADMIN_PW="admin"

# Iterate over LDIF files
for ldif_file in "$HOST_LDIF_DIR"/*.ldif; do
    echo "Processing LDIF file: $ldif_file"

    # Execute ldapadd command and capture output
    output=$(sudo docker exec openldap sh -c "ldapadd -x -D '$LDAP_ADMIN_DN' -w '$LDAP_ADMIN_PW' -c -f '$CONTAINER_LDIF_DIR/ldif/$(basename "$ldif_file")'" 2>&1)
    exit_code=$?

    # Check if the exit code is 68 (Already exists)
    if [ $exit_code -eq 68 ]; then
        echo "The entry already exists in the LDAP directory"
    elif [ $exit_code -eq 0 ]; then
        echo "The entry was added successfully"
    else
        echo "An error occurred while executing ldapadd. Exit code: $exit_code"
        echo "Command output: $output"
    fi
done




